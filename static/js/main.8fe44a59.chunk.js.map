{"version":3,"sources":["components/Home.js","components/Api.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","backgroundColor","paper","padding","spacing","textAlign","color","palette","text","secondary","Home","props","id","useParams","classes","history","useHistory","useTheme","useMediaQuery","breakpoints","up","useState","arrayOfColors","setArrayOfColors","snackBarOpen","setSnackBarOpen","handleClose","event","reason","useEffect","arrayOfColor","split","map","filter","colorToAdd","replace","test","className","Typography","style","fontSize","fontWeight","Grid","container","justify","alignItems","alignContent","item","xs","sm","lg","title","width","height","src","frameborder","allow","allowfullscreen","Paper","Button","onClick","copy","variant","push","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","action","Fragment","IconButton","size","aria-label","Api","Container","App","path","VideoPage","useRouteMatch","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAeMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,SAAU,EACVC,gBAAiB,6BAEnBC,MAAO,CACLC,QAASL,EAAMM,QAAQ,GACvBC,UAAW,SACXC,MAAOR,EAAMS,QAAQC,KAAKC,eAKjB,SAASC,EAAKC,GAAQ,IAC3BC,EAAOC,cAAPD,GACAE,EAAUlB,IACVmB,EAAUC,cACVlB,EAAQmB,cAJkB,GAKhBC,YAAcpB,EAAMqB,YAAYC,GAAG,OAETC,mBAAS,KAPnB,mBAOzBC,EAPyB,KAOVC,EAPU,OASQF,oBAAS,GATjB,mBASzBG,EATyB,KASXC,EATW,KAe1BC,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJH,GAAgB,IAiBlB,OAdAI,qBAAU,WACR,IAAIC,EAAelB,EAAGmB,MAAM,MAC5BD,EAAeA,EAAaE,KAAI,SAAC1B,GAC/B,MAAO,IAAIA,MAEA2B,QAAO,SAAA3B,GACd,IAAI4B,EAAa5B,EAAM6B,QAAQ,OAAO,IACtC,MAAQ,yBAAyBC,KAAKF,MAG5CX,EAAiB,YAAIO,MACpB,CAAClB,IAIA,sBAAKyB,UAAWvB,EAAQf,KAAxB,UACA,cAACuC,EAAA,EAAD,CAAYC,MAAO,CAAClC,UAAW,SAAUC,MAAO,QAASkC,SAAU,GAAIC,WAAY,GAAItC,QAAS,GAAIF,gBAAiB,WAArH,oCAGA,cAACyC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAASC,aAAa,SAAlE,SACI,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIN,QAAQ,SAASC,WAAW,SAASC,aAAa,SAArF,SACI,wBAAQK,MAAM,gBAAgBZ,MAAO,CAACa,MAAO,OAAQC,OAAQ,KAAMC,IAAK,iCAAmC3C,EAAMC,GAAI2C,YAAY,IAAIC,MAAM,2FAA2FC,gBAAgB,aAG9P,sBAAKlB,MAAO,CAACpC,QAAS,IAAtB,UACA,cAACuC,EAAA,EAAD,CAAMC,WAAS,EAACvC,QAAS,EAAGwC,QAAQ,SAASC,WAAW,SAASC,aAAa,SAA9E,SAEIxB,EAAcU,KAAI,SAAAe,GAAI,OACpB,cAACL,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAA/B,SACE,cAACQ,EAAA,EAAD,CAAOrB,UAAWvB,EAAQZ,MAAOqC,MAAO,CAACtC,gBAAiB8C,GAA1D,SACE,cAACY,EAAA,EAAD,CAAQC,QAAS,WACfnC,GAAgB,GAChBoC,IAAKd,IACJe,QAAQ,YAHX,SAII,cAACxB,EAAA,EAAD,UACKS,eAQjB,qBAAKR,MAAO,CAACpC,QAAS,IAAtB,SACE,cAACuC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASE,aAAa,SAASD,WAAW,SAAlE,SACI,cAACH,EAAA,EAAD,CAAMK,MAAI,EAACH,QAAQ,SAASE,aAAa,SAASD,WAAW,SAA7D,SACE,cAACc,EAAA,EAAD,CACAC,QAAS,WACP7C,EAAQgD,KAAK,SAEfD,QAAQ,YACRxD,MAAM,UALN,0BAYV,cAAC0D,EAAA,EAAD,CACAC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,KAAM5C,EACN6C,iBAAkB,IAClBC,QAAS5C,EACT6C,QAAQ,sBACRC,OACE,cAAC,IAAMC,SAAP,UACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,aAAW,QAAQtE,MAAM,UAAUsD,QAASlC,EAArE,SACE,cAAC,IAAD,CAAWc,SAAS,mB,YCtH5B5C,EAAYC,YAAW,CACzBE,KAAM,CACFC,SAAU,EACVG,QAAS,MAwCF0E,MApCf,WACI,IAAM/D,EAAUlB,IAChB,OACI,qBAAKyC,UAAWvB,EAAQf,KAAxB,SACI,eAAC+E,EAAA,EAAD,WACI,cAACpC,EAAA,EAAD,CAAMC,WAAS,EAAf,SACI,cAACD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACI,cAACV,EAAA,EAAD,CAAYwB,QAAQ,KAApB,qCAKR,eAACpB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,eAACD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,UACA,cAACV,EAAA,EAAD,CAAYwB,QAAQ,KAApB,iBAGI,cAACxB,EAAA,EAAD,CAAYC,MAAO,CAACC,SAAU,IAA9B,gFAIA,cAACE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACI,eAACV,EAAA,EAAD,CAAYC,MAAO,CAACC,SAAU,IAA9B,iDACwC,6CADxC,KAC6D,uBAD7D,iIAEkI,uBAFlI,kBAEsJ,iEAAuC,uBAF7L,0CAKI,0HCpBjB,SAASuC,IACtB,OACE,cAAC,IAAD,UAII,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,OAAZ,SACE,cAACC,EAAD,UAOZ,SAASA,IAAa,IAAD,EACCC,cAAdF,EADa,EACbA,KACDpE,GAFc,EACPuE,IACDtE,cAAND,IACL,MAAS,OAANA,EAEO,cAAC,EAAD,IAIR,cAAC,IAAM6D,SAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOO,KAAI,UAAKA,EAAL,QAAX,SACE,cAACtE,EAAD,CAAME,GAAIA,UC5CpB,IAYewE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8fe44a59.chunk.js","sourcesContent":["import { Button, Grid, IconButton, makeStyles, Paper, Snackbar, Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport copy from 'copy-to-clipboard';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport 'fontsource-roboto';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link, \r\n  useParams,\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: 'rgba(209, 209, 209, 0.32)',\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n  \r\n\r\nexport default function Home(props) {\r\n    let { id } = useParams();\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up('lg'));\r\n  \r\n    const [arrayOfColors, setArrayOfColors] = useState([])\r\n  \r\n    const [snackBarOpen, setSnackBarOpen] = useState(false)\r\n  \r\n    const handleClick = () => {\r\n      setSnackBarOpen(true)\r\n    }\r\n  \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n  \r\n      setSnackBarOpen(false);\r\n    };\r\n  \r\n    useEffect(() => {\r\n      var arrayOfColor = id.split(',');\r\n      arrayOfColor = arrayOfColor.map((color) => {\r\n        return '#'+color\r\n      })\r\n      arrayOfColor.filter(color => {\r\n            var colorToAdd = color.replace(/\\s+/g,'') ;\r\n            return (/^#([0-9A-F]{3}){1,2}$/i.test(colorToAdd)) \r\n          }\r\n      )\r\n      setArrayOfColors([...arrayOfColor])\r\n    }, [id])\r\n  \r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <Typography style={{textAlign: 'center', color: 'white', fontSize: 25, fontWeight: 35, padding: 35, backgroundColor: '#2196f3'}} >\r\n            Make sure to subscribe\r\n        </Typography>\r\n        <Grid container justify=\"center\" alignItems=\"center\" alignContent=\"center\" >\r\n            <Grid item xs={12} sm={12} lg={12} justify=\"center\" alignItems=\"center\" alignContent=\"center\"  >\r\n                <iframe title=\"YouTube Video\" style={{width: '100%', height: 350}} src={\"https://www.youtube.com/embed/\" + props.id} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\r\n            </Grid>\r\n        </Grid>\r\n        <div style={{padding: 20}} >\r\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\" alignContent=\"center\" >\r\n          {\r\n            arrayOfColors.map(item => (\r\n              <Grid item xs={12} sm={12} lg={3} >\r\n                <Paper className={classes.paper} style={{backgroundColor: item}} >\r\n                  <Button onClick={() => {\r\n                    setSnackBarOpen(true)\r\n                    copy(item)\r\n                  }} variant=\"contained\">\r\n                      <Typography>\r\n                          {item}\r\n                      </Typography>\r\n                  </Button>\r\n                </Paper>\r\n              </Grid>\r\n          ))\r\n          }\r\n          </Grid>\r\n          <div style={{padding: 25}} >  \r\n            <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" >\r\n                <Grid item justify=\"center\" alignContent=\"center\" alignItems=\"center\" >\r\n                  <Button \r\n                  onClick={() => {\r\n                    history.push('/api')\r\n                  }} \r\n                  variant=\"contained\" \r\n                  color=\"primary\" >\r\n                    API\r\n                  </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n        <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={snackBarOpen}\r\n        autoHideDuration={1000}\r\n        onClose={handleClose}\r\n        message=\"Copied to clipboard\"\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  ","import React from 'react'\r\nimport { Container, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport 'fontsource-roboto';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: 20\r\n    }\r\n})\r\n\r\nfunction Api() {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.root} >\r\n            <Container>\r\n                <Grid container >\r\n                    <Grid item xs={12} >\r\n                        <Typography variant=\"h2\" >\r\n                            How to use this API\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container >\r\n                    <Grid item xs={12} >\r\n                    <Typography variant=\"h4\" >\r\n                        API\r\n                    </Typography>\r\n                        <Typography style={{fontSize: 25}} >\r\n                            {`https://veermetri05.github.io/#/{your_video_id}/{list of color}`}\r\n                        </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <Typography style={{fontSize: 25}} >\r\n                                your_video_id: valid video id, (ex, <b>/RQyKJq0_ZKk</b>) <br/>\r\n                                list of color: valid list of hex color without the Hash (#) sign, seperated by comma (,) (hex-alfa colors are also accepted). <br/> Example list: <b>/fcb046ff,999896,473940ff,43382e</b><br/>\r\n\r\n                                So the final url would look like. {`: `}\r\n                                <b>https://veermetri05.github.io/#/RQyKJq0_ZKk/fcb046ff,999896,473940ff,43382e</b>\r\n                            </Typography>\r\n                        </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Api\r\n","import { Button, Grid, IconButton, makeStyles, Paper, Snackbar, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport copy from 'copy-to-clipboard';\nimport CloseIcon from '@material-ui/icons/Close';\nimport 'fontsource-roboto';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter,\n  Link,\n  useParams,\n  useRouteMatch\n} from \"react-router-dom\";\nimport Home from './components/Home'\nimport Api from \"./components/Api\";\n\nexport default function App() {\n  return (\n    <HashRouter>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/:id\">\n            <VideoPage/>\n          </Route>\n        </Switch>\n    </HashRouter>\n  );\n}\n\nfunction VideoPage() {\n  let { path, url } = useRouteMatch();\n  let {id} = useParams();\n  if(id == 'api') {\n    return (\n            <Api />\n    )\n  }\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path={`${path}/:id`} >\n          <Home id={id} />\n        </Route>\n      </Switch>\n    </React.Fragment>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}